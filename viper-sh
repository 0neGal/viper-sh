#!/bin/sh

ARGS="$@"
JSONPATH="$(jq -r .gamepath "$XDG_CONFIG_HOME/viper.json" 2> /dev/null)"
GAMEPATH="${GAMEPATH:-$JSONPATH}"

LATESTJSON=""

out() {
	echo "$ARGS" | grep -qe "--quiet" || {
		echo $@
	}
}

[ "$GAMEPATH" = "" ] && {
	out "err: \$GAMEPATH not set, and or viper.json was not able to be read."
	exit 1
}

[ ! -d "$GAMEPATH" ] && {
	out "err: '$GAMEPATH' does not exist!"
	exit 1
}

exclude() {
	EXCLUDE="
		ns_startup_args.txt
		ns_startup_args_dedi.txt
	"

	[ "$1" = "--revert" ] && {
		for i in $EXCLUDE; do
			mv "$GAMEPATH"/"$i.excluded" "$GAMEPATH"/"$i"
		done

		return
	}

	for i in $EXCLUDE; do
		mv "$GAMEPATH"/"$i" "$GAMEPATH"/"$i.excluded"
	done
}

getlatest() {
	LATESTJSON="$(curl --silent 'https://api.github.com/repos/R2Northstar/Northstar/releases/latest')"
	/bin/echo $LATESTJSON | jq .message | grep -q "API rate limit" && {
		out "err: You're currently rate limited!"
		return 1
	}
	
	return 0
}

getlatest || exit 1

latest() {
	[ "$LATESTJSON" = "" ] && getlatest

	case $1 in
		"get") getlatest;;
		"ver") /bin/echo "$LATESTJSON" | jq -r .tag_name;;
		"zip") /bin/echo "$LATESTJSON" | jq -r .assets[0].browser_download_url;;
	esac
}

for i in $@; do
	case $i in
		"--update")
			cd "$GAMEPATH"

			[ "$(cat ns_version.txt 2> /dev/null)" = "$(latest ver)" ] && {
				echo "$@" | grep -qe "--force" || {
					out "Already on newest version!"
					exit 1
				}
			}
			
			ZIP="$(latest zip)"
			LOCALZIP="$(echo $ZIP | sed 's/.*\///g')"

			out "Downloading zip..."
			wget "$ZIP" > /dev/null

			exclude

			out "Extracting zip..."
			unzip -oqq "$LOCALZIP"
			rm "$LOCALZIP"

			exclude --revert

			latest ver > ns_version.txt
			out "Finished updating to: $(latest ver)"
			;;
		"--force") ;;
		"--daemon")
			while true; do
				getlatest
				$0 --update --quiet && {
					out "Finished updating to: $(latest ver)"
				} || {
					out "No new version found."
				}

				sleep 5m
			done
			;;
		*)	echo "err: Unknown argument, '$i'";;
	esac
done
